<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on A Hugo website</title>
    <link>/categories/r/</link>
    <description>Recent content in R on A Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Tutorial on Bootstrap Confidence Interval - Part I</title>
      <link>/2020/11/07/a-tutorial-on-bootstrap-confidence-interval-part-i/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/07/a-tutorial-on-bootstrap-confidence-interval-part-i/</guid>
      <description>This is a tutorial I wrote for myself while learning how to correctly implement the BCa (bias-corrected-accelerated) bootstrap confidence interval.
TheoryThe key to understand bootstrap is the two following relationships:
Our statistics of interest, \(\hat\theta\), is calculated from real world data x according to some algorithm \(t(.)\), assuming x is sampled from some unknown distribution F:
\(F \xrightarrow{iid} x \xrightarrow{t} \hat\theta\)Â In nonparametric bootstrap, our bootstrap statistics of interest, \(\hat\theta^*\), is calculated from bootstrap data \(x^*\) according to some algorithm \(t(.</description>
    </item>
    
    <item>
      <title>Data Analysis with R: A Take Home Test from a Gaming Startup</title>
      <link>/2020/10/28/data-analysis-with-r-take-home-test/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/10/28/data-analysis-with-r-take-home-test/</guid>
      <description>I recently finished a take home test from a local start-up. It is my first encounter with such tests, so I think it would be interesting to share my work.
Before we dive in, I would like to say that I probably have made things way more complicated than they need to be. The real
library(plotly)library(tidyverse)library(RColorBrewer)library(rethinking)library(dagitty)library(ggforce)library(car)library(effects)library(wesanderson)Q1: General VisualisationStep 1: data cleaningThe original data is in a messy form.</description>
    </item>
    
  </channel>
</rss>
